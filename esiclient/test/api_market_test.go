/*
EVE Stellar Information (ESI) - tranquility

Testing MarketAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package esiclient

import (
	"context"
	"testing"

	openapiclient "github.com/fnt-eve/esi/esiclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_esiclient_MarketAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MarketAPIService GetCharactersCharacterIdOrders", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.MarketAPI.GetCharactersCharacterIdOrders(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetCharactersCharacterIdOrdersHistory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.MarketAPI.GetCharactersCharacterIdOrdersHistory(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetCorporationsCorporationIdOrders", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var corporationId int64

		resp, httpRes, err := apiClient.MarketAPI.GetCorporationsCorporationIdOrders(context.Background(), corporationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetCorporationsCorporationIdOrdersHistory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var corporationId int64

		resp, httpRes, err := apiClient.MarketAPI.GetCorporationsCorporationIdOrdersHistory(context.Background(), corporationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsGroups", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsGroups(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsGroupsMarketGroupId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var marketGroupId int64

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsGroupsMarketGroupId(context.Background(), marketGroupId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsPrices", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsPrices(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsRegionIdHistory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var regionId int64

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsRegionIdHistory(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsRegionIdOrders", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var regionId int64

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsRegionIdOrders(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsRegionIdTypes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var regionId int64

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsRegionIdTypes(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketAPIService GetMarketsStructuresStructureId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var structureId int64

		resp, httpRes, err := apiClient.MarketAPI.GetMarketsStructuresStructureId(context.Background(), structureId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
