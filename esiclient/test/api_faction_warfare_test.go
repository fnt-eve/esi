/*
EVE Stellar Information (ESI) - tranquility

Testing FactionWarfareAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package esiclient

import (
	"context"
	"testing"

	openapiclient "github.com/fnt-eve/esi/esiclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_esiclient_FactionWarfareAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FactionWarfareAPIService GetCharactersCharacterIdFwStats", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetCharactersCharacterIdFwStats(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetCorporationsCorporationIdFwStats", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var corporationId int64

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetCorporationsCorporationIdFwStats(context.Background(), corporationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetFwLeaderboards", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetFwLeaderboards(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetFwLeaderboardsCharacters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetFwLeaderboardsCharacters(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetFwLeaderboardsCorporations", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetFwLeaderboardsCorporations(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetFwStats", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetFwStats(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetFwSystems", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetFwSystems(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FactionWarfareAPIService GetFwWars", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.FactionWarfareAPI.GetFwWars(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
