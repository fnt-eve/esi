/*
EVE Stellar Information (ESI) - tranquility

Testing ContactsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package esiclient

import (
	"context"
	"testing"

	openapiclient "github.com/fnt-eve/esi/esiclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_esiclient_ContactsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ContactsAPIService DeleteCharactersCharacterIdContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.ContactsAPI.DeleteCharactersCharacterIdContacts(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService GetAlliancesAllianceIdContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var allianceId int64

		resp, httpRes, err := apiClient.ContactsAPI.GetAlliancesAllianceIdContacts(context.Background(), allianceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService GetAlliancesAllianceIdContactsLabels", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var allianceId int64

		resp, httpRes, err := apiClient.ContactsAPI.GetAlliancesAllianceIdContactsLabels(context.Background(), allianceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService GetCharactersCharacterIdContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.ContactsAPI.GetCharactersCharacterIdContacts(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService GetCharactersCharacterIdContactsLabels", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.ContactsAPI.GetCharactersCharacterIdContactsLabels(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService GetCorporationsCorporationIdContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var corporationId int64

		resp, httpRes, err := apiClient.ContactsAPI.GetCorporationsCorporationIdContacts(context.Background(), corporationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService GetCorporationsCorporationIdContactsLabels", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var corporationId int64

		resp, httpRes, err := apiClient.ContactsAPI.GetCorporationsCorporationIdContactsLabels(context.Background(), corporationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService PostCharactersCharacterIdContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.ContactsAPI.PostCharactersCharacterIdContacts(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService PutCharactersCharacterIdContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var characterId int64

		resp, httpRes, err := apiClient.ContactsAPI.PutCharactersCharacterIdContacts(context.Background(), characterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
