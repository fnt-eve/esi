/*
EVE Stellar Information (ESI) - tranquility

Testing DogmaAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package esiclient

import (
	"context"
	"testing"

	openapiclient "github.com/fnt-eve/esi/esiclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_esiclient_DogmaAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DogmaAPIService GetDogmaAttributes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DogmaAPI.GetDogmaAttributes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DogmaAPIService GetDogmaAttributesAttributeId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var attributeId int64

		resp, httpRes, err := apiClient.DogmaAPI.GetDogmaAttributesAttributeId(context.Background(), attributeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DogmaAPIService GetDogmaDynamicItemsTypeIdItemId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var itemId int64
		var typeId int64

		resp, httpRes, err := apiClient.DogmaAPI.GetDogmaDynamicItemsTypeIdItemId(context.Background(), itemId, typeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DogmaAPIService GetDogmaEffects", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DogmaAPI.GetDogmaEffects(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DogmaAPIService GetDogmaEffectsEffectId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var effectId int64

		resp, httpRes, err := apiClient.DogmaAPI.GetDogmaEffectsEffectId(context.Background(), effectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
